services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      mongo:
        condition: service_healthy

  mongo:
    image: mongo:6
    container_name: mongo-db
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    command:
      - "mongod"
      - "--replSet"
      - "rs0"
      - "--bind_ip_all"
      - "--keyFile"
      - "/data/keyfile/mongodb-keyfile"
    volumes:
      - mongo-data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./docker/keyfile/mongodb-keyfile:/data/keyfile/mongodb-keyfile:ro

    healthcheck:
      test: >
        CMD-SHELL
        mongo --quiet --eval "rs.status().myState===1" \
          -u "$$DB_USER" -p "$$DB_PASSWORD" --authenticationDatabase admin
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 15s

volumes:
  mongo-data:
